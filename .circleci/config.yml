# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:

  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  # Run all tests and generate coverage
  build:
   python .\manage.py runserver

  test:
   coverage run --source='.' manage.py test
   coverage html

  # Run trade_simulation tests only
  trade:
   python3 manage.py test trade_simulation.tests

  # Run api tests only
  api:
    python3 manage.py test api.tests

  # Run flake8 and generate output to bugs.txt
  flake8:
   python3 -m flake8 --extend-exclude=./.venv,./zappa/.venv > bugs.txt

  # Run html_coverage command
  html_coverage:
   python3 -m coverage html
    
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
   jobs:
      - say-hello
      - build
      - test
      - flake8
